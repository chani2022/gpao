{% extends 'base-home.html.twig' %}
{% block title %}Retard{% endblock %}
{% block style %}
<meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
{% endblock %}
{% block pageTitle %} Retard {% endblock %}

{% block body %}
   
    <div class="container">
        <div class="col-lg-6 col-md-6">

            <div class="card">

                <div class="card-body">
                {% form_theme form 'form-theme.html.twig' %}

                    {{ form_start(form) }}

                    {{ form_errors(form) }}
                     {% for message in app.flashes('success') %}
                        <div class="list-group-item list-group-item-danger">
                            {{message}}
                        </div>
                    {% endfor %}

                        <div class="form-group">
                         
                        {{ form_row(form.date_interval, {'attr': {'class': 'form-control date', 'readonly': true}}) }}
                        </div>
                        <div class="form-group">
                        {{ form_row(form.fonction, {'attr': {'class': 'form-control fonction'}}) }}
                        </div>
                        <div class="form-group">
                        {{ form_row(form.matricule, {'attr': {'class': 'form-control matricule'}}) }}
                        </div>
                        <div class="form-group">
                        {{ form_row(form.equipe, {'attr': {'class': 'form-control matricule'}}) }}
                        </div>
                        <div class="form-group">
                        {{ form_row(form.signe, {'label': 'Filtre','attr': {'class': 'form-control'}}) }}
                        </div>
                        <div class="form-group">
                        {{ form_row(form.nombre, {'label': 'Valeur à filtré(en minutes)','attr': {'class': 'form-control'}}) }}
                        </div>
                        <div class="form-group">
                        {{ form_row(form.export, {'label': 'Exporter en excel'}) }}
                        </div>

                        <button id="id_affiche" type="submit" class="btn btn-primary">
                            <span class="fa fa-eye"></span> Afficher
                        </button>
                    {{ form_end(form) }}
                    </div>
                     <span id="apetraka3"></span>
                </div>

        </div>

{% if data!=null %}
    <div class="card-deck">
        <div class="container-fluid gedf-wrapper">
            <div class="col-md-12">
            <br/>
                <div class="card">
                    <div class="card-body">
                    <strong>Retard fréquent&nbsp;:</strong>
                    {% for x in personnel_retard_per_days %}&nbsp;&nbsp;
                        <span style="color:red"><strong>{{x}}</strong></span>
                    {% endfor %}
                    <br/>
                        <span id="apetraka"></span>
                        <canvas id="retard" width="400" height="400" class="chart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endif %}

    <div class="card-deck">
        <div class="container-fluid gedf-wrapper">
            <div class="col-md-12">
            <br/>
                <div class="card">
                    <div class="card-body">
                        <span id="apetraka2"></span>
                         <div id="id_download"class="card-body">
                            <a id="dwn_click" style="color:white;background:green;border-color:green;"class="btn btn-warning" href="{{ asset('upload/temp' ~ fileNameExcel ) }}" > Télécharger</a>
                        </div>
                        <canvas id="retard2" width="400" height="400" class="chart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
 </div>




{% endblock %}

{% block javascripts %}
    <script defer>
        $(function(){
            
            /**
             * 
             * statistique retard
             **/
            var data = {{data|json_encode()|raw}};
            var datasets = [];
            var array = [];

                var mon_label={{label|json_encode()|raw}};
                for(var i=0;i<mon_label.length;i++){
                        var myDate = new Date(mon_label[i]);

                        var dd = myDate.getDate();
                        var mm = myDate.getMonth() + 1;
                        var yyyy = myDate.getFullYear();

                        if(dd<10) 
                            {
                                dd='0'+dd;
                            } 
                        if(mm<10) 
                            {
                                mm='0'+mm;
                            } 
                        if(yyyy<10) 
                            {
                                yyyy='0'+yyyy;
                            } 

                        var formatted = dd + "/" + mm + "/" + yyyy;
                        array.push(formatted); 
                    }
            
            var dataChart = {
                labels: array,
                datasets: null
            };
            
            for(var tache in data){

                var somearray = ["20.21040","40.5120","80","400"];

                let x=eval(data[tache].y.join("+"));
                let res = x.toFixed(2);

                $( "#apetraka" ).append( '<span><strong>Matricule</strong>&nbsp;: <span style="color:green">'+ tache +'</span></span><span><strong> Retard</strong>: <span style="color:red"><strong>' + res + '</strong></span> Heure(s)</span><br/>');
                var clr = "rgba("+Math.round(Math.random() * (255 - 1) + 1) +", "+Math.round(Math.random() * (255 - 1) + 1) +", "+Math.round(Math.random() * (255 - 1) + 1) +", 1)";
                var obj = {
                    label: tache,
                    data: data[tache]["y"],
                    borderWidth: 3,
                    fill: false,
                    backgroundColor: clr,
                    borderColor: clr
                };
                datasets.push(obj);
            }
            
            var ctx = document.getElementById('retard').getContext('2d');
            dataChart.datasets = datasets;
            
            var myChart = new Chart(ctx, {
                type: 'line',
                data: dataChart,
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    },
                    plugins: {
                        legend: {
                            display: true,
                            position: 'bottom',
                            labels: {
                                color: 'rgb(255, 99, 132)',
                                fontColor: "#000080",
                            }
                        }
        }
                }
            });
            
            
            /**
             * 
             * autre champs
             */

            $('.fonction').select2({
                multiple: true
            });

            $('.matricule').select2();

            $('.date').daterangepicker({
                locale: {
                    format: 'DD/MM/YYYY'
                }
            });
    });

//deuxieme graphe

 $(function(){

     
            /**
             * 
             * statistique retard
             **/
            var data2 = {{data1|json_encode()|raw}};

               
            
    var datasets = [];
    var array = [];
    var mon_label={{label|json_encode()|raw}};
    for(var i=0;i<mon_label.length;i++){
            var myDate = new Date(mon_label[i]);

            var dd = myDate.getDate();
            var mm = myDate.getMonth() + 1;
            var yyyy = myDate.getFullYear();

            if(dd<10) 
                {
                    dd='0'+dd;
                } 
            if(mm<10) 
                {
                    mm='0'+mm;
                } 
            if(yyyy<10) 
                {
                    yyyy='0'+yyyy;
                } 

            var formatted = dd + "/" + mm + "/" + yyyy;
            array.push(formatted); 
        }
            
            var dataChart = {
                labels: array,
                datasets: null
            };
                
            for(var tache in data2){
                var somearray = ["20.21040","40.5120","80","400"];
                let var_minutes=eval(data2[tache].minute.join("+"));
                let var_heures=eval(data2[tache].y.join("+"));
                let var_heures_deux_chiffres = var_heures.toFixed(2);
                let var_minutes_deux_chiffres = var_minutes.toFixed(2);
                $( "#apetraka2" ).append( '<span><strong>Matricule</strong>&nbsp;: <span style="color:green">'+ tache +'</span></span><span><strong> Retard</strong>: <span style="color:red"><strong>' + var_heures_deux_chiffres + '</strong></span> Heure(s) ou</span><span> <span style="color:red"><strong>' + var_minutes_deux_chiffres + '</strong></span> minute(s)</span><br/>');
                var clr = "rgba("+Math.round(Math.random() * (255 - 1) + 1) +", "+Math.round(Math.random() * (255 - 1) + 1) +", "+Math.round(Math.random() * (255 - 1) + 1) +", 1)";
                var obj = {
                    label: tache,
                    data: data2[tache]["y"],
                    borderWidth: 3,
                    fill: false,
                    backgroundColor: clr,
                    borderColor: clr
                };
                datasets.push(obj);
            }
            
            var ctx = document.getElementById('retard2').getContext('2d');
            dataChart.datasets = datasets;
            
            var myChart = new Chart(ctx, {
                type: 'line',
                data: dataChart,
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    },
                    plugins: {
                        legend: {
                            display: true,
                            position: 'bottom',
                            labels: {
                                color: 'rgb(255, 99, 132)',
                                fontColor: "#000080",
                            }
                        }
        }
                }
            });
            
            
            /**
             * 
             * autre champs
             */

            $('.fonction').select2({
                multiple: true
            });

            $('.matricule').select2();

            $('.date').daterangepicker({
                locale: {
                    format: 'DD/MM/YYYY'
                }
            });
    });
//Fin deuxieme graphe

$(document).ready(function () {

    var DatePickerLocal = {
            "direction": "ltr",
            "format": "DD/MM/YYYY",
            "separator": " -",
            "applyLabel": "Appliquer",
            "cancelLabel": "Annuler",
            "fromLabel": "Da",
            "toLabel": "A",
            "customRangeLabel": "Plage personnalisée",
            "daysOfWeek": [
                "Di",
                "Lu",
                "Ma",
                "Me",
                "Jeu",
                "Ve",
                "Sa"
            ],
            "monthNames": [
                "Janvier",
                "Février",
                "Mars",
                "Avril",
                "Mai",
                "Juin",
                "Juillet",
                "Août",
                "Septembre",
                "Octobre",
                "Novembre",
                "Décembre"
            ],
            "firstDay": 1,
        };
        $("#form_date_interval").daterangepicker({
            autoUpdateInput:false,
            ranges: {
                'Aujourd\'hui': [moment(), moment()],
                'Hier': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                'Les 7 jours derniers': [moment().subtract(6, 'days'), moment()],
                'Les 30 jours derniers': [moment().subtract(29, 'days'), moment()],
                'Ce mois-ci': [moment().startOf('month'), moment().endOf('month')],
                'Le mois dernier': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],
                'Compte actuel': [moment().startOf('month').format('21-MM-YYYY'), moment().endOf('month').add(1, 'month').format('20-MM-YYYY')],
                'Compte précédent': [moment().startOf('month').subtract(1, 'month').format('21-MM-YYYY'), moment().endOf('month').format('20-MM-YYYY')],
            },
            locale:{
                format: "DD/MM/YYYY",
                separator: " - ",
                applyLabel: "Appliquer",
                cancelLabel: "Annuler",
                fromLabel: "Da",
                toLabel: "A",
                customRangeLabel: "Plage personnalisée",
                daysOfWeek: ["Di","Lu","Ma","Me","Jeu","Ve","Sa"],
                monthNames: ["Janvier","Février","Mars","Avril","Mai","Juin","Juillet","Août","Septembre","Octobre","Novembre","Décembre"],
                firstDay: 1
            },
        });
            
        $('#form_date_interval').on('apply.daterangepicker', function(ev, picker) {
            $(this).val(picker.startDate.format('DD/MM/YYYY') + ' - ' + picker.endDate.format('DD/MM/YYYY'));
        });

    

  //$("select#form_user").css({"title": "Recherche"});

    /*au changement du champs user on met à jour l'affichage des champs*/
 
    /*initialisation du champs user, pour l'utilisation du plugin select2 avec un filtre de recherche particulier*/
    $('select#form_equipe').select2({matcher: select2matchCustomUser});
    $('select#form_retard').select2({matcher: select2matchCustomUser});
    $('select#form_fonction').select2({matcher: select2matchCustomUser});
    //$('select#form_nombre').select2({matcher: select2matchCustomUser});
    /*initialisation de 'laffichage des champs*/
 
});

$('#form_date_interval').daterangepicker({
    locale: {
            format: 'DD/MM/YYYY'
            }
});

/*On va utiliser le système de recherche classique du plugin select2*/
var defaultMatcher = $.fn.select2.defaults.defaults.matcher;
function select2matchCustomUser(params, data) {
    /* Si l'option est "Autre" on l'affiche toujours */
    if (params.term && data.id == "autre") {
        return data;
    }
    /* Sinon utilisation de la recherche classique */
    return defaultMatcher(params, data);
}

$("#id_download").css("display", "none");
$(document).ready(function(){
    toggleid_affiche($("#id_affiche"));
    $("#id_affiche").change(function(){
        toggleid_affiche($(this));
    });
    function toggleid_affiche(obj){
        if ($("#form_export").is(":checked") && $('#form_nombre').val() != '' &&  $('#form_signe').val() != '') {
        $("#id_download").css("display", "block");
        }
        
    }
});


 </script>

    
{% endblock %}